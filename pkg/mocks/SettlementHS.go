// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	cipher "github.com/skycoin/skywire-utilities/pkg/cipher"

	mock "github.com/stretchr/testify/mock"

	network "github.com/skycoin/skywire/pkg/transport/network"

	transport "github.com/skycoin/skywire/pkg/transport"
)

// SettlementHS is an autogenerated mock type for the SettlementHS type
type SettlementHS struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, dc, _a2, sk
func (_m *SettlementHS) Execute(ctx context.Context, dc transport.DiscoveryClient, _a2 network.Transport, sk cipher.SecKey) error {
	ret := _m.Called(ctx, dc, _a2, sk)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, transport.DiscoveryClient, network.Transport, cipher.SecKey) error); ok {
		r0 = rf(ctx, dc, _a2, sk)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSettlementHS creates a new instance of SettlementHS. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSettlementHS(t interface {
	mock.TestingT
	Cleanup(func())
}) *SettlementHS {
	mock := &SettlementHS{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
