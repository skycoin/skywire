// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// handlerFunc is an autogenerated mock type for the handlerFunc type
type handlerFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: w, r, ctx
func (_m *handlerFunc) Execute(w http.ResponseWriter, r *http.Request, ctx *visor.httpCtx) {
	_m.Called(w, r, ctx)
}

// newHandlerFunc creates a new instance of handlerFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newHandlerFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *handlerFunc {
	mock := &handlerFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
