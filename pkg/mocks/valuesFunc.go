// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// valuesFunc is an autogenerated mock type for the valuesFunc type
type valuesFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: w, r
func (_m *valuesFunc) Execute(w http.ResponseWriter, r *http.Request) (*visor.httpCtx, bool) {
	ret := _m.Called(w, r)

	var r0 *visor.httpCtx
	var r1 bool
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) (*visor.httpCtx, bool)); ok {
		return rf(w, r)
	}
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) *visor.httpCtx); ok {
		r0 = rf(w, r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*visor.httpCtx)
		}
	}

	if rf, ok := ret.Get(1).(func(http.ResponseWriter, *http.Request) bool); ok {
		r1 = rf(w, r)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// newValuesFunc creates a new instance of valuesFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newValuesFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *valuesFunc {
	mock := &valuesFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
