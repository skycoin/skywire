// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	logging "github.com/skycoin/skywire-utilities/pkg/logging"
	mock "github.com/stretchr/testify/mock"

	visor "github.com/skycoin/skywire/pkg/visor"
)

// initFn is an autogenerated mock type for the initFn type
type initFn struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2
func (_m *initFn) Execute(_a0 context.Context, _a1 *visor.Visor, _a2 *logging.Logger) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *visor.Visor, *logging.Logger) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newInitFn creates a new instance of initFn. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newInitFn(t interface {
	mock.TestingT
	Cleanup(func())
}) *initFn {
	mock := &initFn{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
