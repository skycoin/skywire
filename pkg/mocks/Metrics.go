// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	routing "github.com/skycoin/skywire/pkg/routing"
	mock "github.com/stretchr/testify/mock"
)

// Metrics is an autogenerated mock type for the Metrics type
type Metrics struct {
	mock.Mock
}

// RecordRequest provides a mock function with given fields:
func (_m *Metrics) RecordRequest() func(*routing.EdgeRules, *error) {
	ret := _m.Called()

	var r0 func(*routing.EdgeRules, *error)
	if rf, ok := ret.Get(0).(func() func(*routing.EdgeRules, *error)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(*routing.EdgeRules, *error))
		}
	}

	return r0
}

// RecordRoute provides a mock function with given fields:
func (_m *Metrics) RecordRoute() func(*error) {
	ret := _m.Called()

	var r0 func(*error)
	if rf, ok := ret.Get(0).(func() func(*error)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(*error))
		}
	}

	return r0
}

// NewMetrics creates a new instance of Metrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *Metrics {
	mock := &Metrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
