// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	cipher "github.com/skycoin/skywire-utilities/pkg/cipher"
	mock "github.com/stretchr/testify/mock"

	transport "github.com/skycoin/skywire/pkg/transport"
)

// RouteSetupHook is an autogenerated mock type for the RouteSetupHook type
type RouteSetupHook struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *RouteSetupHook) Execute(_a0 cipher.PubKey, _a1 *transport.Manager) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(cipher.PubKey, *transport.Manager) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRouteSetupHook creates a new instance of RouteSetupHook. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRouteSetupHook(t interface {
	mock.TestingT
	Cleanup(func())
}) *RouteSetupHook {
	mock := &RouteSetupHook{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
