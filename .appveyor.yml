version: "{build}"

stack: node 16.8.0

environment:
  matrix:
  # For regular jobs, such as push, pr and etc.
  - job_name: Linux
    appveyor_build_worker_image: ubuntu1804
    GOARCH: amd64
  - job_name: MacOS
    appveyor_build_worker_image: macos-bigsur
    GOARCH: amd64
  - job_name: Windows
    appveyor_build_worker_image: Visual Studio 2019
    GOARCH: amd64

  # For release, by pushing tag
  - job_name: linux-amd64
    appveyor_build_worker_image: ubuntu2004
    GOARCH: amd64
  - job_name: linux-arm
    appveyor_build_worker_image: ubuntu2004
    GOARCH: arm
  - job_name: linux-arm64
    appveyor_build_worker_image: ubuntu2004
    GOARCH: arm64
  - job_name: linux-386
    appveyor_build_worker_image: ubuntu2004
    GOARCH: 386
  - job_name: darwin-amd64
    appveyor_build_worker_image: macos
    GOARCH: amd64
  - job_name: windows-amd64
    appveyor_build_worker_image: Visual Studio 2019
    GOARCH: amd64

  - job_name: DockerDeployMaster
    appveyor_build_worker_image: ubuntu2004
  - job_name: DockerDeployDevelop
    appveyor_build_worker_image: ubuntu2004
  
for:
  - # Linux
    skip_tags: true
    matrix:
      only:
        - job_name: Linux

    install:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.44.2
      - sudo apt-get install gcc libgtk-3-dev libayatana-appindicator3-dev -y
      - make dep
      - sh: ci_scripts/create-ip-aliases.sh
    
    before_build:
      - make check
   
    build_script:
      - make build
      - make build-systray

  - # MacOS
    skip_tags: true
    matrix:
      only:
        - job_name: Linux

    install:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.44.2
      - make dep
      - sh: ci_scripts/create-ip-aliases.sh
    
    before_build:
      - make check
   
    build_script:
      - make build

  - # Windows
    skip_tags: true
    matrix:
      only:
        - job_name: Windows

    environment:
      matrix:
        - GOARCH: amd64

    install:
      - choco install make
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.44.2
      - make dep
      - set PATH=C:\Users\appveyor\go\bin;C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH%

    before_build:
      - set GO111MODULE=on
      - make check-windows
  
    build_script:
      - make build-windows

  - # Linux and MacOS (Release)
    skip_non_tags: true
    matrix:
      only:
        - job_name: linux-arm
        - job_name: linux-arm64
        - job_name: linux-amd64
        - job_name: linux-386
        - job_name: darwin-amd64

    install:
      - make dep
      - ci_scripts/create-ip-aliases.sh
      - export GOARM=7
    
    build_script:
      - make build

  - # Windows (Release)
    skip_non_tags: true
    matrix:
      only:
        - job_name: windows-amd64

    environment:
      matrix:
        - GOARCH: amd64

    install:
      - cmd: choco install make
      - make dep

    build_script:
      - make build
    
  - # Docker Deploy (Master)
    build: off
    matrix:
      only:
        - job_name: DockerDeployMaster
    branches:
      only:
        - master
    before_deploy:
      - ./ci_scripts/docker-push.sh -t master -p
    deploy_script:
      - echo "Master Docker Push Complete!"

  - # Docker Deploy (Develop)
    build: off
    matrix:
      only:
        - job_name: DockerDeployDevelop
    branches:
      only:
        - develop
    before_deploy:
      - ./ci_scripts/docker-push.sh -t develop -p
    deploy_script:
      - echo "Develop Docker Push Complete!"
